BootStrap: library
From: ubuntu:20.04
%post
    . /.singularity.d/env/10-docker*.sh

%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        build-essential \
        ca-certificates \
        cmake \
        g++ \
        gdb \
        git \
        libffi-dev \
        libgdbm-dev \
        libjpeg-dev \
        liblzma-dev \
        libncurses5-dev \
        libpng-dev \
        libreadline-dev \
        libsqlite3-dev \
        libssl-dev \
        libxml2-dev \
        libxmlsec1-dev \
        ninja-build \
        numactl \
        tcl-dev \
        tk-dev \
        unzip \
        uuid-dev \
        vim \
        xz-utils \
        zlib1g-dev \
        libcgal-dev \
        curl
    rm -rf /var/lib/apt/lists/*

# https://github.com/python/cpython.git
%post
    cd /
    mkdir -p /var/tmp && cd /var/tmp && git clone --depth=1 --branch v3.11.0 https://github.com/python/cpython.git cpython && cd -
    cd /var/tmp/cpython &&   ./configure --prefix=/usr/local/python --disable-shared --enable-optimizations --with-lto CFLAGS='-fno-semantic-interposition' LDFLAGS='-fno-semantic-interposition'
    make -j$(nproc)
    make -j$(nproc) install
    rm -rf /var/tmp/cpython
%environment
    export PATH=${PATH}:/usr/local/python/bin:/usr/local/python/lib:${LD_LIBRARY_PATH}
    export PKG_CONFIG_PATH=/usr/local/python/lib/pkgconfig:${PKG_CONFIG_PATH}
    export PYTHONPATH=${PYTHONPATH}:/usr/local/python/lib/python3.11/site-packages
%post
    export PATH=${PATH}:/usr/local/python/bin:/usr/local/python/lib:${LD_LIBRARY_PATH}
    export PKG_CONFIG_PATH=/usr/local/python/lib/pkgconfig:${PKG_CONFIG_PATH}
    export PYTHONPATH=${PYTHONPATH}:/usr/local/python/lib/python3.11/site-packages

%post
    cd /
    mkdir -p /var/tmp/firedrake_build
    cd /var/tmp/firedrake_build
    curl -O https://raw.githubusercontent.com/firedrakeproject/firedrake/master/scripts/firedrake-install
    python3 firedrake-install --honour-pythonpath
    source firedrake/bin/activate
    cd

%post
    cd /
    pip install twine
    pip install -U SeismicMesh[io]
    pip install segyio
    pip install --no-cache-dir roltrilinos
    pip install --no-cache-dir ROL
    git clone https://github.com/NDF-Poli-USP/spyro.git
    cd spyro
    make publish

